{"version":3,"sources":["uni_modules/uni-wifi/utssdk/app-android/index.uts","uni_modules/uni-wifi/utssdk/interface.uts"],"sourcesContent":["import Context from \"android.content.Context\";\nimport { UTSAndroid } from \"io.dcloud.uts\";\nimport WifiManager from \"android.net.wifi.WifiManager\";\nimport WifiInfo from \"android.net.wifi.WifiInfo\";\nimport Manifest from \"android.Manifest\";\nimport PackageManager from \"android.content.pm.PackageManager\";\nimport ScanResult from \"android.net.wifi.ScanResult\";\nimport BroadcastReceiver from \"android.content.BroadcastReceiver\";\nimport ActivityCompat from \"androidx.core.app.ActivityCompat\";\nimport IntentFilter from \"android.content.IntentFilter\";\nimport JSONObject from \"com.alibaba.fastjson.JSONObject\";\nimport Intent from \"android.content.Intent\";\nimport Thread from \"java.lang.Thread\";\n\nimport WifiConfiguration from 'android.net.wifi.WifiConfiguration';\nimport AuthAlgorithm from 'android.net.wifi.WifiConfiguration.AuthAlgorithm';\nimport KeyMgmt from 'android.net.wifi.WifiConfiguration.KeyMgmt';\nimport TextUtils from 'android.text.TextUtils';\nimport Build from 'android.os.Build';\n\nimport { UniWifiResult, GetConnectedWifiOptions, WifiConnectOption, WifiOption, UniWifiInfo } from \"../interface.uts\"\n\n\n/**\n\t* 全局数据储存\n\t*/\nclass Global {\n\tstatic mReceiver : CustomBroadcastReceiver | null = null;\n\tstatic WIFI_AUTH_OPEN : string = \"\";\n\tstatic WIFI_AUTH_ROAM : String = \"[ESS]\";\n\t// 扫描wifi结果\n\tstatic scanList : AndroidUniWifiInfo[] = []\n\t// 获取wifi列表监听\n\tstatic onGetWifiListCallback : UTSCallback | null = null\n\tstatic supendGetWifiSuccess : ((res: UniWifiResult) => void) | null = null\n\tstatic supendGetWifiComplete : ((res: UniWifiResult) => void) | null = null\n\t// wifi链接监听\n\tstatic onWifiConnectCallbackList : UTSCallback[] = []\n\tstatic onWifiConnectWithPartialInfoCallbackList : UTSCallback[] = []\n}\n\n\n/**\n\t* 是否是标准的16进制字符\n\t*/\nfunction isHex(key : string) : boolean {\n\tfor (var i = key.length - 1; i >= 0; i--) {\n\t\tlet c = key.charAt(i);\n\t\tif (!(c >= '0' && c <= '9' || c >= 'A' && c <= 'F' || c >= 'a'\n\t\t\t&& c <= 'f')) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n\t* 判断是否是wep格式的key\n\t*/\nfunction isHexWepKey(wepKey : string) : boolean {\n\tlet len = wepKey.length;\n\n\t// WEP-40, WEP-104, and some vendors using 256-bit WEP (WEP-232?)\n\tif (len != 10 && len != 26 && len != 58) {\n\t\treturn false;\n\t}\n\n\treturn isHex(wepKey);\n}\n/**\n * android 平台特有的Wifi信息对象，主要是加了加密信息这个字段\n */\nexport type AndroidUniWifiInfo = {\n\tSSID : string;\n\tBSSID ?: string;\n\tsecure : boolean;\n\tsignalStrength : number;\n\tfrequency : number;\n\tsecurityType : string;\n}\n\nfunction wrapUniWifiInfoFromAndroid(androidInfo : AndroidUniWifiInfo) : UniWifiInfo {\n\tlet ret : UniWifiInfo = {\n\t\tSSID: androidInfo.SSID,\n\t\tBSSID: androidInfo.BSSID,\n\t\tsecure: androidInfo.secure,\n\t\tsignalStrength: androidInfo.signalStrength,\n\t\tfrequency: androidInfo.frequency,\n\t}\n\treturn ret\n}\n/**\n * 从扫描结果中提取统一的wifi数据结构\n */\nfunction wrapUniWifiInfoFromScan(scanResult : ScanResult) : AndroidUniWifiInfo {\n\n\tlet ret : AndroidUniWifiInfo = {\n\t\tSSID: \"\",\n\t\tsecure: false,\n\t\tsignalStrength: 0,\n\t\tfrequency: 0,\n\t\tsecurityType: \"NONE\"\n\t}\n\tif (scanResult != null) {\n\t\t// 如果是通过扫描列表得到的数据，进行封装\n\t\tret.BSSID = scanResult.BSSID;\n\t\tret.SSID = scanResult.SSID;\n\n\t\tret.signalStrength = scanResult.level;\n\t\tret.frequency = scanResult.frequency;\n\n\t\t// 是否安全，微信的标准是是否需要密码。 来源:https://developers.weixin.qq.com/community/develop/doc/00064cf1790458db19cddf9925ac00?highLine=WifiInfo\n\t\tret.secure = false;\n\t\tlet capabilities = scanResult.capabilities.trim();\n\t\tif ((capabilities.equals(Global.WIFI_AUTH_OPEN) || capabilities.equals(Global.WIFI_AUTH_ROAM))) {\n\t\t\tret.secure = false;\n\t\t} else {\n\t\t\tret.secure = true;\n\t\t}\n\n\t\t/*扩展字段*/\n\t\tret.securityType = getSecurityType(scanResult);\n\t}\n\n\treturn ret\n}\n/**\n * 从链接信息中提取统一的wifi数据结构\n */\nfunction wrapUniWifiInfoFromConnectInfo(connectInfo : WifiInfo) : UniWifiInfo {\n\tlet ret : UniWifiInfo = {\n\t\tSSID: \"\",\n\t\tsecure: false,\n\t\tsignalStrength: 0,\n\t\tfrequency: 0,\n\t}\n\n\n\tif (connectInfo.getSSID() != null) {\n\t\tlet s = connectInfo.getSSID();\n\t\t// 微信不带，这里需要去掉引号\n\t\tif (s.length > 2 && s.charAt(0) == '\"' && s.charAt(s.length - 1) == '\"') {\n\t\t\ts = s.substring(1, s.length - 1);\n\t\t}\n\t\tret.SSID = s;\n\t}\n\n\tret.BSSID = connectInfo.getBSSID();\n\t//Android返回的值是-100~0，而微信API规范是0~100，值越大信号越好，需要+100拉齐\n\tret.signalStrength = connectInfo.getRssi() + 100;\n\tret.frequency = connectInfo.getFrequency();\n\n\n\treturn ret\n}\n\n\n/**\n * 连接wifi时使用，根据用户输入内容包装为系统需要的wifi配置对象\n **/\n@Suppress(\"DEPRECATION\")\nfunction wrapWifiConfiguration(SSID : string, password ?: string, passwordType : string) : WifiConfiguration {\n\n\tlet config = new WifiConfiguration();\n\tconfig.status = WifiConfiguration.Status.ENABLED;\n\tconfig.allowedAuthAlgorithms.clear();\n\tconfig.allowedGroupCiphers.clear();\n\tconfig.allowedKeyManagement.clear();\n\tconfig.allowedPairwiseCiphers.clear();\n\tconfig.allowedProtocols.clear();\n\tconfig.SSID = \"\\\"\".concat(SSID).concat(\"\\\"\");\n\n\n\t// nopass\n\tif (\"NONE\".equals(passwordType) || password == null) {\n\t\tconfig.allowedKeyManagement.set(WifiConfiguration.KeyMgmt.NONE);\n\t}\n\t// wep\n\telse if (\"WEP\".equals(passwordType)) {\n\t\tif (password != null && !TextUtils.isEmpty(password)) {\n\t\t\tif (isHexWepKey(password)) {\n\t\t\t\tconfig.wepKeys[0] = password;\n\t\t\t} else {\n\t\t\t\tconfig.wepKeys[0] = \"\\\"\".concat(password).concat(\"\\\"\");\n\t\t\t}\n\t\t}\n\t\tconfig.allowedAuthAlgorithms.set(AuthAlgorithm.OPEN);\n\t\tconfig.allowedAuthAlgorithms.set(AuthAlgorithm.SHARED);\n\t\tconfig.allowedKeyManagement.set(KeyMgmt.NONE);\n\t\tconfig.wepTxKeyIndex = 0;\n\t}\n\t// wpa\n\telse if (\"WPA\".equals(passwordType)) {\n\t\tconfig.allowedProtocols.set(WifiConfiguration.Protocol.RSN);\n\t\tconfig.allowedProtocols.set(WifiConfiguration.Protocol.WPA);\n\t\tconfig.allowedKeyManagement.set(WifiConfiguration.KeyMgmt.WPA_PSK);\n\t\tconfig.allowedPairwiseCiphers.set(WifiConfiguration.PairwiseCipher.CCMP);\n\t\tconfig.allowedPairwiseCiphers.set(WifiConfiguration.PairwiseCipher.TKIP);\n\t\tconfig.allowedGroupCiphers.set(WifiConfiguration.GroupCipher.WEP40);\n\t\tconfig.allowedGroupCiphers.set(WifiConfiguration.GroupCipher.WEP104);\n\t\tconfig.allowedGroupCiphers.set(WifiConfiguration.GroupCipher.CCMP);\n\t\tconfig.allowedGroupCiphers.set(WifiConfiguration.GroupCipher.TKIP);\n\t\tconfig.preSharedKey = \"\\\"\".concat(password).concat(\"\\\"\");\n\t}\n\n\treturn config;\n}\n\n\n/**\n\t* 判断当前wifi的加密类型\n\t*/\nfunction getSecurityType(result : ScanResult) : string {\n\tif (result.capabilities.contains(\"WEP\")) {\n\t\treturn \"WEP\";\n\t} else if (result.capabilities.contains(\"PSK\")) {\n\t\treturn \"WPA\";\n\t} else if (result.capabilities.contains(\"EAP\")) {\n\t\treturn \"EAP\";\n\t}\n\treturn \"NONE\";\n}\n\n\nfunction zeroCountNum(source ?: string) : number {\n\tif (source == null) {\n\t\treturn 0\n\t}\n\tvar splitted = source.split(\":\")\n\tvar countNum = 0;\n\tfor (perItem in splitted) {\n\t\tif (perItem == \"00\") {\n\t\t\tcountNum += 1\n\t\t}\n\t}\n\treturn countNum\n}\n\nclass AsyncConnectionThread extends Thread{\n\t\n\tmWifiManager : WifiManager | null = null;\n\t\n\tconstructor(wifi:WifiManager){\n\t\tsuper();\n\t\tthis.mWifiManager = wifi\n\t}\n\toverride run(){\n\t\t\n\t\tlet uniWifiInfo : UniWifiInfo = {\n\t\t\tSSID: \"\",\n\t\t\tsecure: false,\n\t\t\tsignalStrength: 0,\n\t\t\tfrequency: 0,\n\t\t}\n\t\t\n\t\t// BroadcastReceiver 中不能执行耗时任务，需要使用setTimeout\n\t\t// @ts-ignore\n\t\tlet winfo = this.mWifiManager!.getConnectionInfo();\n\t\t\n\t\twhile (winfo.bssid == null || zeroCountNum(winfo.bssid) > 4) {\n\t\t\tThread.sleep(1000)\n\t\t\twinfo = this.mWifiManager!.getConnectionInfo();\n\t\t}\n\t\t\n\t\t// 封装成数据对象\n\t\tuniWifiInfo = wrapUniWifiInfoFromConnectInfo(winfo)\n\t\tlet res = {\n\t\t\terrMsg: 'onWifiConnected:ok',\n\t\t\terrCode: 0,\n\t\t\twifi: uniWifiInfo\n\t\t}\n\t\t// wifi状态可用了，分发当前的链接状态给已注册的监听集合\n\t\tfor (let perCallback in Global.onWifiConnectCallbackList) {\n\t\t\tperCallback(res);\n\t\t}\n\t\t// 封装仅SSID 数据对象\n\t\tvar connectedWithPartialInfo = {\n\t\t\tSSID: uniWifiInfo.SSID\n\t\t}\n\t\tfor (let perCallback in Global.onWifiConnectWithPartialInfoCallbackList) {\n\t\t\tperCallback(connectedWithPartialInfo);\n\t\t}\n\t\t\n\t}\n\t\n}\n\n\n\t\n\t\n\t\n/**\n\t* 自定义wifi变化广播监听器\n\t*/\n@Suppress(\"UNUSED_PARAMETER\", \"DEPRECATION\")\nclass CustomBroadcastReceiver extends BroadcastReceiver {\n\n\tmWifiManager : WifiManager | null = null;\n\n\tconstructor(wifiManager : WifiManager) {\n\t\tsuper();\n\t\tthis.mWifiManager = wifiManager;\n\t}\n\n\toverride onReceive(_context : Context, intent : Intent) : void {\n\n\n\t\tif (intent.action == WifiManager.WIFI_STATE_CHANGED_ACTION) {\n\t\t\tlet state =\n\t\t\t\tintent.getIntExtra(WifiManager.EXTRA_WIFI_STATE, WifiManager.WIFI_STATE_UNKNOWN)\n\t\t\tif (state == WifiManager.WIFI_STATE_ENABLED) {\n\t\t\t\t// 获取当前的connectInfo 并且进行数据封装\n\t\t\t\t// let uniWifiInfo = new UniWifiInfo(null)\n\t\t\t\t//做一些异步操作\n\t\t\t\tnew AsyncConnectionThread(this.mWifiManager!!).start()\n\t\t\t}\n\n\t\t}\n\n\n\t\tif (intent.action == WifiManager.SCAN_RESULTS_AVAILABLE_ACTION) {\n\t\t\tstartWifiScaning = false;\n\t\t\t\n\t\t\tlet ret : UniWifiResult = {\n\t\t\t\terrCode: 0,\n\t\t\t\terrSubject: \"uni-getWifiList\",\n\t\t\t\terrMsg: \"getWifiList:ok\"\n\t\t\t}\n\t\t\tif(Global.supendGetWifiSuccess != null){\n\t\t\t\tGlobal.supendGetWifiSuccess?.(ret)\n\t\t\t}\n\t\t\tif(Global.supendGetWifiComplete != null){\n\t\t\t\tGlobal.supendGetWifiComplete?.(ret)\n\t\t\t}\n\t\t\t\n\t\t\t// wifi 扫描结果回调\n\t\t\tlet results = this.mWifiManager!.scanResults;\n\n\t\t\t\n\t\t\tif (results != null) {\n\t\t\t\tGlobal.scanList = []\n\t\t\t\tfor (let scanResult in results) {\n\t\t\t\t\tif (scanResult.SSID == null) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tGlobal.scanList.push(wrapUniWifiInfoFromScan(scanResult));\n\t\t\t\t}\n\n\t\t\t\t// 挨个通知，所有的监听器\n\t\t\t\tif(Global.onGetWifiListCallback != null){\n\t\t\t\t\tconst data = new JSONObject();\n\t\t\t\t\tdata[\"wifiList\"] = Global.scanList\n\t\t\t\t\tGlobal.onGetWifiListCallback?.(data);\n\t\t\t\t}\n\t\t\t\t// for (let perCallback in Global.onGetWifiListCallback) {\n\t\t\t\t// \tconst data = new JSONObject();\n\t\t\t\t// \tdata[\"wifiList\"] = Global.scanList\n\t\t\t\t// \tperCallback(data);\n\t\t\t\t// }\n\n\t\t\t}\n\n\t\t}\n\t}\n\n}\n\n\n\n/************************* 下面是对外提供的函数 *************************/\n/**\n * start wifi是否正在扫描\n */\nvar startWifiScaning = false\n\n/**\n * 开启wifi\n */\n@Suppress(\"DEPRECATION\")\nexport function startWifi(option : WifiOption) {\n\n\t// 需要先开启wifi,才能使用后续的功能\n\tlet requestCode = 1001;\n\tlet permissionWifi = arrayOf(\"android.permission.ACCESS_FINE_LOCATION\");\n\tvar result : UniWifiResult = {\n\t\terrCode: 12001,\n\t\terrMsg: \"startWifi:premission loss\",\n\t\terrSubject: \"uni-startWifi\"\n\t}\n\t// 检查权限\n\tif (ActivityCompat.checkSelfPermission(UTSAndroid.getUniActivity()!, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\n\n\t\tActivityCompat.requestPermissions(UTSAndroid.getUniActivity()!, permissionWifi, requestCode)\n\t\t// 尚不具备权限，返回错误\n\t\toption.fail?.(result)\n\t\toption.complete?.(result)\n\n\t\treturn;\n\t}\n\t\n\t// 具备了权限，继续前进\n\tlet wifiManager : WifiManager =\n\t\tUTSAndroid.getAppContext()!.getSystemService(Context.WIFI_SERVICE) as WifiManager\n\t// 用户没有开启wifi 总开关\n\tif (!wifiManager.isWifiEnabled()) {\n\t\t// wifi 没开启\n\t\tresult.errCode = 12005;\n\t\tresult.errMsg = \"wifi not turned on\";\n\n\t\toption.fail?.(result);\n\t\toption.complete?.(result);\n\t\treturn;\n\t}\n\t// 初始化wifi 状态广播监听，后续所有的api，均基于此\n\tif(Global.mReceiver != null){\n\t\t// 说明已经注册过了\n\t\tresult.errCode = 0\n\t\tresult.errMsg = \"startWifi:ok\"\n\t\t\n\t\toption.success?.(result)\n\t\toption.complete?.(result)\n\t\treturn \n\t}\n\t\n\t\n\tGlobal.mReceiver = new CustomBroadcastReceiver(wifiManager)\n\n\tlet filter = new IntentFilter()\n\tfilter.addAction(WifiManager.SCAN_RESULTS_AVAILABLE_ACTION)\n\t// @ts-ignore\n\tfilter.addAction(WifiManager.WIFI_STATE_CHANGED_ACTION)\n\t// @ts-ignore\n\tfilter.addAction(WifiManager.SUPPLICANT_STATE_CHANGED_ACTION);\n\n\tUTSAndroid.getUniActivity()!.registerReceiver(Global.mReceiver, filter)\n\n\t/**\n\t\t* activity 被销毁时，取消注册\n\t\t*/\n\tUTSAndroid.onAppActivityDestroy(function () {\n\n\t\tif (Global.mReceiver != null) {\n\t\t\tUTSAndroid.getUniActivity()!.unregisterReceiver(Global.mReceiver)\n\t\t\tGlobal.mReceiver = null\n\n\t\t\tGlobal.scanList = []\n\t\t\tGlobal.onGetWifiListCallback = null\n\t\t\tGlobal.onWifiConnectCallbackList = []\n\t\t\tGlobal.onWifiConnectWithPartialInfoCallbackList = []\n\t\t}\n\n\t});\n\tstartWifiScaning = true\n\t// 开始扫描\n\twifiManager.startScan()\n\n\tresult.errCode = 0\n\tresult.errMsg = \"startWifi:ok\"\n\n\toption.success?.(result)\n\toption.complete?.(result)\n\n}\n\n/**\n\t* 获取wifi列表\n\t*/\n@Suppress(\"DEPRECATION\")\nexport function getWifiList(option : WifiOption) {\n\n\tvar result : UniWifiResult = {\n\t\terrCode: 12000,\n\t\terrMsg: \"getWifiList:fail:not invoke startWifi\",\n\t\terrSubject: \"uni-getWifiList\"\n\t}\n\n\tif (Global.mReceiver == null) {\n\t\t// 还没调用startWifi 提示报错\n\t\toption.fail?.(result)\n\t\toption.complete?.(result)\n\n\t\treturn\n\t}\n\n\tlet wifiManager : WifiManager =\n\t\tUTSAndroid.getAppContext()!.getSystemService(Context.WIFI_SERVICE) as WifiManager\n\n\n\n\tGlobal.supendGetWifiSuccess = option.success\n\tGlobal.supendGetWifiComplete = option.complete\n\t\n\twifiManager.startScan()\n\t\n\n}\n\n\n\n/**\n\t* wifi 链接成功的回调注册\n\t*/\nexport function onWifiConnected(callback : UTSCallback) {\n\tGlobal.onWifiConnectCallbackList.push(callback)\n}\n\n\nexport function onWifiConnectedWithPartialInfo(callback : UTSCallback) {\n\tGlobal.onWifiConnectWithPartialInfoCallbackList.push(callback)\n}\n\n\n/**\n * wifi 链接成功的回调取消注册\n */\nexport function offWifiConnected(callback? : UTSCallback) {\n\t\n\tif(callback == null){\n\t\tGlobal.onWifiConnectCallbackList = []\n\t\treturn\n\t}\n\t\n\tlet callbackIndex = Global.onWifiConnectCallbackList.indexOf(callback)\n\tif (callbackIndex >= 0) {\n\t\tGlobal.onWifiConnectCallbackList.splice(callbackIndex, 1);\n\t}\n}\n\n/**\n * 不具备详细信息的wifi 反注册\n */\nexport function offWifiConnectedWithPartialInfo(callback? : UTSCallback) {\n\t\n\tif(callback == null){\n\t\tGlobal.onWifiConnectWithPartialInfoCallbackList = []\n\t\treturn\n\t}\n\t\n\tlet callbackIndex = Global.onWifiConnectWithPartialInfoCallbackList.indexOf(callback)\n\tif (callbackIndex >= 0) {\n\t\tGlobal.onWifiConnectWithPartialInfoCallbackList.splice(callbackIndex, 1);\n\t}\n}\n\n/**\n\t* 注册Wifi列表的监听事件\n\t*/\nexport function onGetWifiList(callback : UTSCallback) {\n\tGlobal.onGetWifiListCallback = callback\n}\n\n/**\n * 取消注册Wifi列表的监听事件\n */\nexport function offGetWifiList(callback? : UTSCallback) {\n\tGlobal.onGetWifiListCallback = null\n\tGlobal.supendGetWifiComplete = null\n\tGlobal.supendGetWifiSuccess = null\n}\n\n\n/**\n * 真正执行wifi链接逻辑\n */\nfunction realWifiConnect(option : WifiConnectOption,result : UniWifiResult){\n\t\n\tif (Global.mReceiver == null || Global.scanList.length < 1) {\n\t\toption.fail?.(result)\n\t\toption.complete?.(result)\n\t\t\n\t\treturn\n\t}\n\t\n\t// 执行后续的逻辑\n\tlet scanWifiInfo : AndroidUniWifiInfo | null = null\n\tfor (let scanResult in Global.scanList) {\n\t\tif (scanResult.SSID.equals(option.SSID)) {\n\t\t\tscanWifiInfo = scanResult\n\t\t}\n\t}\n\t\n\tif (scanWifiInfo == null) {\n\t\t// 不在扫描列表中返回错误\n\t\toption.fail?.(result)\n\t\toption.complete?.(result)\n\t\treturn\n\t}\n\t\n\tlet wifiConfigration = wrapWifiConfiguration(scanWifiInfo.SSID, option.password, scanWifiInfo.securityType);\n\twifiConfigration.BSSID = scanWifiInfo.BSSID\n\tlet wifiManager : WifiManager =\n\t\tUTSAndroid.getAppContext()!.getSystemService(Context.WIFI_SERVICE) as WifiManager\n\t\n\t// 如果已经存在了指定wifi 配置，移除之\n\tlet targetExistConfig : WifiConfiguration | null = null\n\tlet existingConfigs = wifiManager.getConfiguredNetworks();\n\tfor (let existingConfig in existingConfigs) {\n\t\tif (existingConfig.SSID.equals(\"\\\"\" + option.SSID + \"\\\"\")) {\n\t\t\ttargetExistConfig = existingConfig\n\t\t}\n\t}\n\t// 如果wifi已经保存了当前ssid的配置，可能是别的应用添加的。android系统要求，需要删除掉重新添加\n\tif (targetExistConfig != null) {\n\t\tlet removeRet = wifiManager.removeNetwork(targetExistConfig.networkId);\n\t\t\n\t\tif (!removeRet) {\n\t\t\t\n\t\t\t// add since 2023-03-28，如果当前系统大于等于android10， 则明确当前系统不支持\n\t\t\tif(Build.VERSION.SDK_INT > 28){\n\t\t\t\t// 系统大于android 9\n\t\t\t\tresult.errCode = 12001\n\t\t\t\tresult.errMsg = \"connectWifi:system not support\"\n\t\t\t}else{\n\t\t\t\t// 移除之前的配置失败了，返回错误，需要用户手动取消保存一下\n\t\t\t\tresult.errCode = 12013\n\t\t\t\tresult.errMsg = \"connectWifi:wifi config may be expired\"\n\t\t\t}\n\t\t\t\n\t\t\toption.fail?.(result)\n\t\t\toption.complete?.(result)\n\t\n\t\t\treturn\n\t\t}\n\t\n\t}\n\t\n\tlet currentConnect = wifiManager.getConnectionInfo()\n\tif (currentConnect.networkId >= 0) {\n\t\twifiManager.disableNetwork(currentConnect.networkId)\n\t} else {\n\t\twifiManager.removeNetwork(currentConnect.networkId)\n\t}\n\twifiManager.disconnect()\n\t\n\tlet connected = false;\n\ttry {\n\t\n\t\tlet netID = wifiManager.addNetwork(wifiConfigration);\n\t\t// 如果-1 说明没添加上，报错即可\n\t\tif (netID < 0) {\n\t\t\tresult.errCode = 12002\n\t\t\tresult.errMsg = \"connectWifi:password error Wi-Fi\"\n\t\n\t\t\toption.fail?.(result)\n\t\t\toption.complete?.(result)\n\t\n\t\t\treturn\n\t\t}\n\t\n\t\n\t\tlet enabled = wifiManager.enableNetwork(netID, true);\n\t\tif (!enabled) {\n\t\n\t\t\tresult.errCode = 12007\n\t\t\tresult.errMsg = \"connectWifi:user denied\"\n\t\n\t\t\toption.fail?.(result)\n\t\t\toption.complete?.(result)\n\t\n\t\t\treturn\n\t\t}\n\t\tconnected = wifiManager.reconnect();\n\t\n\t} catch (e) {\n\t\tconnected = false;\n\t\tconsole.log(e);\n\t}\n\t\n\tif (!connected) {\n\t\t// 出错了，返回错误\n\t\t// 兜底的报错\n\t\tresult.errCode = 12010\n\t\tresult.errMsg = \"connectWifi:fail:unknown error\"\n\t\n\t\toption.fail?.(result)\n\t\toption.complete?.(result)\n\t\treturn\n\t}\n\t\n\twifiManager.saveConfiguration()\n\t//scanWifiInfo 根据 partialInfo 填充给返回字段\n\tif (option.partialInfo != null && option.partialInfo == true) {\n\t\tlet wifiPartialInfo : UniWifiInfo = {\n\t\t\tSSID: scanWifiInfo.SSID\n\t\t}\n\t\tresult.wifi = wifiPartialInfo\n\t} else {\n\t\tresult.wifi = wrapUniWifiInfoFromAndroid(scanWifiInfo)\n\t}\n\t\n\t// result.wifi = scanWifiInfo.toUTSJSON(option.partialInfo)\n\tresult.errCode = 0\n\tresult.errMsg = \"connectWifi:ok\"\n\t\n\toption.success?.(result)\n\toption.complete?.(result)\n}\n\n/**\n * 链接指定wifi\n */\n@Suppress(\"UNUSED_PARAMETER\", \"DEPRECATION\")\nexport function connectWifi(option : WifiConnectOption) {\n\n\n\tvar result : UniWifiResult = {\n\t\terrCode: 12000,\n\t\terrMsg: \"connectWifi:fail:not invoke startWifi\",\n\t\terrSubject: \"uni-connectWifi\",\n\t}\n\n\tif (option.maunal == true) {\n\t\t// 指定了手动模式\n\t\tlet manunalIntent = new Intent(android.provider.Settings.ACTION_WIFI_SETTINGS);\n\t\tUTSAndroid.getUniActivity()!.startActivity(manunalIntent);\n\n\t\tresult.errCode = 0\n\t\tresult.errMsg = \"connectWifi:ok\"\n\n\t\toption.success?.(result)\n\t\toption.complete?.(result)\n\t\treturn\n\t}\n\n\t\n\t\n\t// add since 2022-03-28 ，增加逻辑，如果正在扫描中，则可以等待5s\n\tif(startWifiScaning){\n\t\tlet taskCount = 0\n\t\tlet taskId:number  = 0\n\t\ttaskId = setInterval(function(){\n\t\t\n\t\t\ttaskCount += 1;\n\t\t\tif(taskCount >= 5 || startWifiScaning == false){\n\t\t\t\t// 超过10s了。或者扫描过程结束了\n\t\t\t\tclearInterval(taskId)\n\t\t\t\trealWifiConnect(option,result)\n\t\t\t}\n\t\t},2000)\n\t\t\n\t\tUTSAndroid.onAppActivityDestroy(function () {\n\t\t\tclearInterval(taskId)\n\t\t});\n\t}else{\n\t\trealWifiConnect(option,result)\n\t}\n\n\t\n\n}\n\n\n/**\n\t* 关闭wifi\n\t*/\nexport function stopWifi(option : WifiOption) {\n\t// 需要先开启wifi,才能使用后续的功能\n\tif (Global.mReceiver == null) {\n\t\tvar result : UniWifiResult = {\n\t\t\terrCode: 12000,\n\t\t\terrSubject: \"uni-stopWifi\",\n\t\t\terrMsg: \"stopWifi:not init\"\n\t\t}\n\t\toption.fail?.(result)\n\t\toption.complete?.(result)\n\n\t\treturn\n\t}\n\ttry {\n\t\tUTSAndroid.getUniActivity()!.unregisterReceiver(Global.mReceiver)\n\t} catch (e) {\n\t\t// 多次调用\n\t\t//TODO handle the exception\n\t}\n\t\n\tGlobal.onGetWifiListCallback = null\n\tGlobal.onWifiConnectWithPartialInfoCallbackList = []\n\tGlobal.onWifiConnectCallbackList = []\n\tGlobal.mReceiver = null\n\t\n\tlet result : UniWifiResult = {\n\t\terrCode: 0,\n\t\terrSubject: \"uni-stopWifi\",\n\t\terrMsg: \"stopWifi:ok\"\n\t}\n\toption.success?.(result)\n\toption.complete?.(result)\n\n}\n\n/**\n * 获取当前连接中的wifi信息\n */\n@Suppress(\"DEPRECATION\")\nexport function getConnectedWifi(option : GetConnectedWifiOptions) {\n\n\tlet wifiInfo : UniWifiInfo = {\n\t\tSSID: \"\"\n\t}\n\n\tvar res : UniWifiResult = {\n\t\terrCode: 12000,\n\t\terrMsg: \"getConnectedWifi:fail:not invoke startWifi\",\n\t\terrSubject: \"uni-getConnectedWifi\",\n\t}\n\n\tif (Global.mReceiver == null) {\n\t\t// 还没调用startWifi 提示报错\n\t\toption.fail?.(res)\n\t\toption.complete?.(res)\n\n\t\treturn\n\t}\n\n\t// 需要先校验权限，没有位置权限无法获取wifi\n\tif (ActivityCompat.checkSelfPermission(UTSAndroid.getUniActivity()!, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\n\t\t// 尚不具备权限，返回错误\n\t\tres.errCode = 12001\n\t\tres.errMsg = \"getConnectedWifi:permission loss\"\n\n\t\toption.fail?.(res)\n\t\toption.complete?.(res)\n\t\treturn;\n\t}\n\n\tconst context = UTSAndroid.getAppContext();\n\tif (context != null) {\n\t\tconst wm = context.getSystemService(\n\t\t\tContext.WIFI_SERVICE\n\t\t) as WifiManager;\n\t\t// 测试android 12上可以使用\n\t\t//@ts-ignore\n\t\tconst winfo = wm.getConnectionInfo();\n\n\t\twifiInfo = wrapUniWifiInfoFromConnectInfo(winfo);\n\t\t// 判断一下是否wifi 关闭了\n\t\tif (option.partialInfo != null && option.partialInfo == true) {\n\t\t\tlet ret : UniWifiInfo = {\n\t\t\t\tSSID: wifiInfo.SSID\n\t\t\t}\n\t\t\tres.wifi = ret;\n\t\t} else {\n\t\t\tif (wifiInfo.BSSID == null || zeroCountNum(wifiInfo.BSSID) > 3) {\n\t\t\t\tres.errCode = 12005\n\t\t\t\tres.errMsg = \"getConnectedWifi:fail:wifi is disable\"\n\n\t\t\t\toption.fail?.(res)\n\t\t\t\toption.complete?.(res)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tres.wifi = wifiInfo;\n\t\t}\n\n\t\tres.errCode = 0\n\t\tres.errMsg = \"getConnectedWifi:ok\"\n\n\t\toption.success?.(res)\n\t\toption.complete?.(res)\n\t\treturn\n\t}\n\toption.fail?.(res)\n\toption.complete?.(res)\n}\n","/**\n * Wifi 函数通用入参封装\n */\n export type WifiOption = {\n\tsuccess?: (res: UniWifiResult) => void;\n\tfail?: (res: UniWifiResult) => void;\n\tcomplete?: (res: UniWifiResult) => void;\n};\n\n/**\n * Wifi 链接参数封装 \n */\nexport type WifiConnectOption = {\n\tSSID?: string;\n\tBSSID?: string;\n\tpassword?: string;\n\tmaunal?: boolean;\n\tpartialInfo?: boolean; //ios不生效\n\tsuccess?: (res: UniWifiResult) => void;\n\tfail?: (res: UniWifiResult) => void;\n\tcomplete?: (res: UniWifiResult) => void;\n}\n\n/**\n * 获取当前链接的wifi信息\n */\nexport type GetConnectedWifiOptions = {\n\tpartialInfo?: boolean\n\tsuccess?: (res: UniWifiResult) => void\n\tfail?: (res: UniWifiResult) => void\n\tcomplete?: (res: UniWifiResult) => void\n}\n\n/* \n * 对外暴露的wifi信息\n */\nexport type UniWifiInfo = {\n\tSSID: string;\n\tBSSID?: string;\n\tsecure?: boolean;\n\tsignalStrength?: number;\n\tfrequency?: number;\n}\n\n\nexport type UniWifiResult = {\n\terrCode : number,\n\terrSubject : string,\n\terrMsg : string,\n\twifi: UniWifiInfo | null\n}\n\nexport type UniWifiCallback = () => void\n\n\nexport type StartWifi = (option: WifiOption) => void\n\nexport type StopWifi = (option: WifiOption) => void\n\nexport type GetWifiList = (option: WifiOption) => void\n\nexport type OnGetWifiList = (callback: UniWifiCallback) => void\n\nexport type OffGetWifiList = (callback: UniWifiCallback) => void\n\nexport type GetConnectedWifi = (option: GetConnectedWifiOptions) => void\n\nexport type ConnectWifi = (option: WifiConnectOption) => void\n\nexport type OnWifiConnected = (callback: UniWifiCallback) => void\n\nexport type OnWifiConnectedWithPartialInfo = (callback: UniWifiCallback) => void\n\nexport type OffWifiConnected = (callback: UniWifiCallback | null) => void\n\nexport type OnOffWifiConnectedWithPartialInfo = (callback: UniWifiCallback | null) => void\n\nexport type SetWifiList = (option: WifiOption) => void\n\ninterface Uni {\n\tstartWifi : StartWifi,\n\tstopWifi : StopWifi,\n\t/**\n\t * @autotest {\n\t\tgenerated: false,\n\t\tpollution: false,\n\t\tcases:[\n\t\t\t{\n\t\t\t\tbefore: 'startWifi',\n\t\t\t\tafter: 'stopWifi',\n\t\t\t\tinput: [{\n\t\t\t\t\tmaunal:false,\n\t\t\t\t\tSSID:\"Xiaomi_20D0\",\n\t\t\t\t\tpassword:\"streamApp!2016\",\n\t\t\t\t}],\n\t\t\t\toutput:{\n\t\t\t\t    \tcallbackType: 'success',\n\t\t\t\t        value: { errCode: 12013 ,errMsg: \"connectWifi:wifi config may be expired\",errSubject: \"uni-connectWifi\"}\n\t\t\t\t    }\n\t\t\t}\n\t\t]\n\t}\n\t*/\n\tconnectWifi: ConnectWifi,\n\t/**\n\t * @autotest {\n\t\tgenerated: false,\n\t\tcases:[\n\t\t\t{\n\t\t\t\tbefore: 'startWifi',\n\t\t\t\tafter: 'stopWifi'\n\t\t\t}\n\t\t]\n\t}\n\t*/\n\tgetWifiList : GetWifiList,\n\tonGetWifiList : OnGetWifiList,\n\toffGetWifiList : OffGetWifiList,\n\tgetConnectedWifi : GetConnectedWifi,\n\tonWifiConnected : OnWifiConnected,\n\tonWifiConnectedWithPartialInfo : OnWifiConnectedWithPartialInfo,\n\toffWifiConnected : OffWifiConnected,\n\tonOffWifiConnectedWithPartialInfo : OnOffWifiConnectedWithPartialInfo,\n\tsetWifiList : SetWifiList,\n}\n"],"names":[],"mappings":"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"}